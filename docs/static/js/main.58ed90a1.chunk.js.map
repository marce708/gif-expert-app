{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAETC,mBAAS,IAFA,mBAEvCC,EAFuC,KAE1BC,EAF0B,KAe9C,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,UACI,6CACA,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,c,+BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUH,GAFtF,qBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAnBb,EAAkB,EAAlBA,IAAKU,EAAa,EAAbA,MAE9B,OACI,sBAAKI,UAAU,0CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,UAAe,ECDb,SAAEA,GAAgB,IAAD,EACfd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAkBzC,OAZAC,qBAAW,WACPxB,EAASC,GACRwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIrB,CAACpB,IAGGqB,EDL4BK,CAAa1B,GAAlCa,EAZuB,EAY7BN,KAAea,EAZc,EAYdA,QAEvB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,UAAoDhB,EAApD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEtBrBgB,EAAe,WAAM,MAEMzC,mBAAS,CAAC,gBAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAO9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACI2C,EAAWnB,KAAK,SAAAT,GAAS,OAErB,aADA,CACC,EAAD,CAAyBA,UAAWA,GAAtBA,YCflC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.58ed90a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n    \r\n    const [inputValue , setInputValue] = useState('');\r\n    \r\n    const handleInputChange  = (e) =>{\r\n        setInputValue(e.target.value)\r\n    };\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategorias(cate => [inputValue,...cate]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h2>AddCategory</h2>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            >\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async(categoria) => {\r\n        \r\n    const url = `https:\\\\api.giphy.com/v1/gifs/search?api_key=Ggc7ABEpSLkhblL4OrO2d2fQjLgkH9k4&q=${encodeURI(categoria)}&limit=5`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json(); //data es desestructuracion del resp de Giphy\r\n    \r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n//crea con RAFC\r\nexport const GifGridItem = ({url, title })  => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \" >\r\n            <img src={ url } alt={ title }></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria}) => {\r\n    /*\r\n    useEffect( () => {\r\n        getGifs(categoria)\r\n            .then(imgs => setImages(imgs));\r\n                         //then(setImages); esta linea es la misma que la de arriba,\r\n                         //es otra forma de escribir mas resumida.\r\n    }, [categoria] );\r\n        // pongo CATEGORIA como DEPENDENCIA por si llegara a cambiar su valor.\r\n        //En mi ejemplo no lo va a hacer, pero react me advierte de la posibilidad. \r\n    */\r\n   \r\n    const { data: images , loading } = useFetchGifs(categoria);\r\n\r\n    return (  \r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{ categoria } </h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n        <div className=\"card-grid\">\r\n            \r\n            {   images.map( img => (\r\n                    <GifGridItem \r\n                        key={ img.id } \r\n                        {...img}\r\n                    /> \r\n                ))\r\n            }\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( categoria )\r\n        .then(imgs => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n       \r\n        });\r\n    }, [categoria]);\r\n    \r\n\r\n    return state; //OJO: STATE en este caso es lo que tiene entre parentesis\r\n                    // useState(), osea el objeto data y loadind\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categorias = [ 'One Punch', 'Samurai X', 'Dragon Ball' ];\r\n    const [categorias, setCategorias] = useState(['Dragon Ball']);\r\n    //const handleAdd = ()=>{\r\n    //    setCategorias([...categorias,'nuevoValor'])\r\n    //}2\r\n    //\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias}></AddCategory>\r\n            <hr/> \r\n            \r\n            <ol>\r\n            {   categorias.map( categoria =>\r\n                    //return <li key={ cate }> { cate } </li>\r\n                    <GifGrid key={categoria} categoria={categoria}></GifGrid>\r\n                )\r\n            }\r\n            </ol>\r\n    \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp} from './GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}